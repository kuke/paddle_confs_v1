#!/usr/bin/env python
# coding: utf-8

from paddle.trainer_config_helpers import *
import math

Settings(
    algorithm='sgd',
    learning_rate=0.1,
    learning_method='adadelta',
    ada_epsilon=1e-6,
    ada_rou=0.95,
    batch_size=4000,
    average_window=0,
    max_average_window=0,
    learning_rate_decay_a=0,
    learning_rate_decay_b=0, )

word_emb_dim = 256
hidden_dim = 256
context_length = 3
default_decay_rate(1e-4)
default_initial_std(0.01)
dict_path = 'idict.sort.100w.1'
dict_len = len(open(dict_path).read().strip().split('\n')) + 1
TrainData(
    PyData(
        files='train.list',
        load_data_module='dataprovider_pos',
        load_data_object='processData',
        load_data_args=dict_path, ))
TestData(
    PyData(
        files='test.list',
        load_data_module='dataprovider_pos',
        load_data_object='processData_test',
        load_data_args=dict_path, ))

Inputs('input1', 'input2', 'label')

Layer(
    name='input2',
    type='data',
    size=dict_len, )
Layer(
    name='input2_emb',
    type='mixed',
    active_type='',
    size=word_emb_dim,
    bias=False,
    inputs=TableProjection(
        'input2', parameter_name='_emb_basic', is_static=True), )
Layer(
    inputs=[Input('input2_emb')],
    name='input2_vec',
    trans_type='non-seq',
    bias=Bias(parameter_name='_avg.bias_basic', is_static=True),
    active_type='tanh',
    type='average',
    average_strategy='sum', )
Layer(
    name='hidden_input2',
    active_type='tanh',
    inputs=[
        Input('input2_vec', parameter_name='_hidden_input2.w', is_static=True)
    ],
    bias=Bias(parameter_name='_hidden_input2.bias', is_static=True),
    type='fc',
    size=hidden_dim)

Layer(
    name='input1',
    type='data',
    size=dict_len, )
Layer(
    name='input1_emb',
    type='mixed',
    active_type='',
    size=word_emb_dim,
    bias=False,
    inputs=TableProjection(
        'input1',
        parameter_name='emb_input1',
        decay_rate=1e-4,
        initial_std=0.02), )
Layer(
    inputs=[Input('input1_emb')],
    name='input1_vec',
    trans_type='non-seq',
    bias=Bias(parameter_name='_avg.bias_input1', initial_std=0.01),
    active_type='tanh',
    type='average',
    average_strategy='sum', )
Layer(
    name='hidden_input1',
    active_type='tanh',
    inputs=[
        Input(
            'input1_vec', parameter_name='_hidden_input1.w', initial_std=0.03)
    ],
    bias=Bias(parameter_name='_hidden_input1.bias'),
    type='fc',
    size=hidden_dim)
Layer(
    name='label',
    type='data',
    size=1, )
Layer(
    inputs=['hidden_input1', 'hidden_input2'],
    name='cost',
    type='square_error')
Outputs('cost')
